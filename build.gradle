//import org.gradle.api.tasks.testing.logging.TestExceptionFormat


buildscript {
    ext.kotlin_version = '2.0.20'

    repositories {

        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

allprojects {
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'kotlinx-serialization'
apply plugin:  'maven-publish'

defaultTasks 'run'

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}



ext {
    slf4jVersion = '2.0.13'
    assertjVersion = "3.26.3"
    kotestVersion = '5.9.1'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.slf4j:slf4j-nop:$slf4jVersion"
    implementation("io.arrow-kt:arrow-core:1.2.4")

    implementation 'com.sun.mail:android-mail:1.6.7'
    implementation 'com.sun.mail:android-activation:1.6.7'

    implementation 'com.approvaltests:approvaltests:24.3.0'
    implementation 'com.github.javaparser:javaparser-core:3.26.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'

    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    //testImplementation 'org.sfvl:documentationtesting:1.1.20'  //TODO: make it work

    testImplementation("org.testcontainers:testcontainers:1.20.1")
    implementation(platform("org.testcontainers:testcontainers-bom:1.20.1"))
    testImplementation("org.testcontainers:mysql")
    testImplementation("mysql:mysql-connector-java:8.0.33")
    testImplementation("org.testcontainers:postgresql:1.20.1")
    testImplementation("org.postgresql:postgresql:42.7.4")

}

wrapper {
    gradleVersion = "7.3"
}

test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        //exceptionFormat TestExceptionFormat.FULL
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ["-Xallow-result-return-type"]

}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ["-Xallow-result-return-type"]
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

